

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sat Aug 30 02:22:52 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Generated 17/10/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4580 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000FE0                     bsr             equ	4064
    57   000FE9                     fsr0            equ	4073
    58   000FEA                     fsr0h           equ	4074
    59   000FE9                     fsr0l           equ	4073
    60   000FE1                     fsr1            equ	4065
    61   000FE2                     fsr1h           equ	4066
    62   000FE1                     fsr1l           equ	4065
    63   000FD9                     fsr2            equ	4057
    64   000FDA                     fsr2h           equ	4058
    65   000FD9                     fsr2l           equ	4057
    66   000FEF                     indf0           equ	4079
    67   000FE7                     indf1           equ	4071
    68   000FDF                     indf2           equ	4063
    69   000FF2                     intcon          equ	4082
    70   000000                     nvmcon          equ	0
    71   000FF9                     pcl             equ	4089
    72   000FFA                     pclath          equ	4090
    73   000FFB                     pclatu          equ	4091
    74   000FEB                     plusw0          equ	4075
    75   000FE3                     plusw1          equ	4067
    76   000FDB                     plusw2          equ	4059
    77   000FED                     postdec0        equ	4077
    78   000FE5                     postdec1        equ	4069
    79   000FDD                     postdec2        equ	4061
    80   000FEE                     postinc0        equ	4078
    81   000FE6                     postinc1        equ	4070
    82   000FDE                     postinc2        equ	4062
    83   000FEC                     preinc0         equ	4076
    84   000FE4                     preinc1         equ	4068
    85   000FDC                     preinc2         equ	4060
    86   000FF3                     prod            equ	4083
    87   000FF4                     prodh           equ	4084
    88   000FF3                     prodl           equ	4083
    89   000FD8                     status          equ	4056
    90   000FF5                     tablat          equ	4085
    91   000FF6                     tblptr          equ	4086
    92   000FF7                     tblptrh         equ	4087
    93   000FF6                     tblptrl         equ	4086
    94   000FF8                     tblptru         equ	4088
    95   000FFD                     tosl            equ	4093
    96   000FE8                     wreg            equ	4072
    97   000D60                     RXF6SIDH        equ	3424	;# 
    98   000D61                     RXF6SIDL        equ	3425	;# 
    99   000D62                     RXF6EIDH        equ	3426	;# 
   100   000D63                     RXF6EIDL        equ	3427	;# 
   101   000D64                     RXF7SIDH        equ	3428	;# 
   102   000D65                     RXF7SIDL        equ	3429	;# 
   103   000D66                     RXF7EIDH        equ	3430	;# 
   104   000D67                     RXF7EIDL        equ	3431	;# 
   105   000D68                     RXF8SIDH        equ	3432	;# 
   106   000D69                     RXF8SIDL        equ	3433	;# 
   107   000D6A                     RXF8EIDH        equ	3434	;# 
   108   000D6B                     RXF8EIDL        equ	3435	;# 
   109   000D70                     RXF9SIDH        equ	3440	;# 
   110   000D71                     RXF9SIDL        equ	3441	;# 
   111   000D72                     RXF9EIDH        equ	3442	;# 
   112   000D73                     RXF9EIDL        equ	3443	;# 
   113   000D74                     RXF10SIDH       equ	3444	;# 
   114   000D75                     RXF10SIDL       equ	3445	;# 
   115   000D76                     RXF10EIDH       equ	3446	;# 
   116   000D77                     RXF10EIDL       equ	3447	;# 
   117   000D78                     RXF11SIDH       equ	3448	;# 
   118   000D79                     RXF11SIDL       equ	3449	;# 
   119   000D7A                     RXF11EIDH       equ	3450	;# 
   120   000D7B                     RXF11EIDL       equ	3451	;# 
   121   000D80                     RXF12SIDH       equ	3456	;# 
   122   000D81                     RXF12SIDL       equ	3457	;# 
   123   000D82                     RXF12EIDH       equ	3458	;# 
   124   000D83                     RXF12EIDL       equ	3459	;# 
   125   000D84                     RXF13SIDH       equ	3460	;# 
   126   000D85                     RXF13SIDL       equ	3461	;# 
   127   000D86                     RXF13EIDH       equ	3462	;# 
   128   000D87                     RXF13EIDL       equ	3463	;# 
   129   000D88                     RXF14SIDH       equ	3464	;# 
   130   000D89                     RXF14SIDL       equ	3465	;# 
   131   000D8A                     RXF14EIDH       equ	3466	;# 
   132   000D8B                     RXF14EIDL       equ	3467	;# 
   133   000D90                     RXF15SIDH       equ	3472	;# 
   134   000D91                     RXF15SIDL       equ	3473	;# 
   135   000D92                     RXF15EIDH       equ	3474	;# 
   136   000D93                     RXF15EIDL       equ	3475	;# 
   137   000DD4                     RXFCON0         equ	3540	;# 
   138   000DD5                     RXFCON1         equ	3541	;# 
   139   000DD8                     SDFLC           equ	3544	;# 
   140   000DE0                     RXFBCON0        equ	3552	;# 
   141   000DE1                     RXFBCON1        equ	3553	;# 
   142   000DE2                     RXFBCON2        equ	3554	;# 
   143   000DE3                     RXFBCON3        equ	3555	;# 
   144   000DE4                     RXFBCON4        equ	3556	;# 
   145   000DE5                     RXFBCON5        equ	3557	;# 
   146   000DE6                     RXFBCON6        equ	3558	;# 
   147   000DE7                     RXFBCON7        equ	3559	;# 
   148   000DF0                     MSEL0           equ	3568	;# 
   149   000DF1                     MSEL1           equ	3569	;# 
   150   000DF2                     MSEL2           equ	3570	;# 
   151   000DF3                     MSEL3           equ	3571	;# 
   152   000DF8                     BSEL0           equ	3576	;# 
   153   000DFA                     BIE0            equ	3578	;# 
   154   000DFC                     TXBIE           equ	3580	;# 
   155   000E20                     B0CON           equ	3616	;# 
   156   000E21                     B0SIDH          equ	3617	;# 
   157   000E22                     B0SIDL          equ	3618	;# 
   158   000E23                     B0EIDH          equ	3619	;# 
   159   000E24                     B0EIDL          equ	3620	;# 
   160   000E25                     B0DLC           equ	3621	;# 
   161   000E26                     B0D0            equ	3622	;# 
   162   000E27                     B0D1            equ	3623	;# 
   163   000E28                     B0D2            equ	3624	;# 
   164   000E29                     B0D3            equ	3625	;# 
   165   000E2A                     B0D4            equ	3626	;# 
   166   000E2B                     B0D5            equ	3627	;# 
   167   000E2C                     B0D6            equ	3628	;# 
   168   000E2D                     B0D7            equ	3629	;# 
   169   000E2E                     CANSTAT_RO9     equ	3630	;# 
   170   000E2F                     CANCON_RO9      equ	3631	;# 
   171   000E30                     B1CON           equ	3632	;# 
   172   000E31                     B1SIDH          equ	3633	;# 
   173   000E32                     B1SIDL          equ	3634	;# 
   174   000E33                     B1EIDH          equ	3635	;# 
   175   000E34                     B1EIDL          equ	3636	;# 
   176   000E35                     B1DLC           equ	3637	;# 
   177   000E36                     B1D0            equ	3638	;# 
   178   000E37                     B1D1            equ	3639	;# 
   179   000E38                     B1D2            equ	3640	;# 
   180   000E39                     B1D3            equ	3641	;# 
   181   000E3A                     B1D4            equ	3642	;# 
   182   000E3B                     B1D5            equ	3643	;# 
   183   000E3C                     B1D6            equ	3644	;# 
   184   000E3D                     B1D7            equ	3645	;# 
   185   000E3E                     CANSTAT_RO8     equ	3646	;# 
   186   000E3F                     CANCON_RO8      equ	3647	;# 
   187   000E40                     B2CON           equ	3648	;# 
   188   000E41                     B2SIDH          equ	3649	;# 
   189   000E42                     B2SIDL          equ	3650	;# 
   190   000E43                     B2EIDH          equ	3651	;# 
   191   000E44                     B2EIDL          equ	3652	;# 
   192   000E45                     B2DLC           equ	3653	;# 
   193   000E46                     B2D0            equ	3654	;# 
   194   000E47                     B2D1            equ	3655	;# 
   195   000E48                     B2D2            equ	3656	;# 
   196   000E49                     B2D3            equ	3657	;# 
   197   000E4A                     B2D4            equ	3658	;# 
   198   000E4B                     B2D5            equ	3659	;# 
   199   000E4C                     B2D6            equ	3660	;# 
   200   000E4D                     B2D7            equ	3661	;# 
   201   000E4E                     CANSTAT_RO7     equ	3662	;# 
   202   000E4F                     CANCON_RO7      equ	3663	;# 
   203   000E50                     B3CON           equ	3664	;# 
   204   000E51                     B3SIDH          equ	3665	;# 
   205   000E52                     B3SIDL          equ	3666	;# 
   206   000E53                     B3EIDH          equ	3667	;# 
   207   000E54                     B3EIDL          equ	3668	;# 
   208   000E55                     B3DLC           equ	3669	;# 
   209   000E56                     B3D0            equ	3670	;# 
   210   000E57                     B3D1            equ	3671	;# 
   211   000E58                     B3D2            equ	3672	;# 
   212   000E59                     B3D3            equ	3673	;# 
   213   000E5A                     B3D4            equ	3674	;# 
   214   000E5B                     B3D5            equ	3675	;# 
   215   000E5C                     B3D6            equ	3676	;# 
   216   000E5D                     B3D7            equ	3677	;# 
   217   000E5E                     CANSTAT_RO6     equ	3678	;# 
   218   000E5F                     CANCON_RO6      equ	3679	;# 
   219   000E60                     B4CON           equ	3680	;# 
   220   000E61                     B4SIDH          equ	3681	;# 
   221   000E62                     B4SIDL          equ	3682	;# 
   222   000E63                     B4EIDH          equ	3683	;# 
   223   000E64                     B4EIDL          equ	3684	;# 
   224   000E65                     B4DLC           equ	3685	;# 
   225   000E66                     B4D0            equ	3686	;# 
   226   000E67                     B4D1            equ	3687	;# 
   227   000E68                     B4D2            equ	3688	;# 
   228   000E69                     B4D3            equ	3689	;# 
   229   000E6A                     B4D4            equ	3690	;# 
   230   000E6B                     B4D5            equ	3691	;# 
   231   000E6C                     B4D6            equ	3692	;# 
   232   000E6D                     B4D7            equ	3693	;# 
   233   000E6E                     CANSTAT_RO5     equ	3694	;# 
   234   000E6F                     CANCON_RO5      equ	3695	;# 
   235   000E70                     B5CON           equ	3696	;# 
   236   000E71                     B5SIDH          equ	3697	;# 
   237   000E72                     B5SIDL          equ	3698	;# 
   238   000E73                     B5EIDH          equ	3699	;# 
   239   000E74                     B5EIDL          equ	3700	;# 
   240   000E75                     B5DLC           equ	3701	;# 
   241   000E76                     B5D0            equ	3702	;# 
   242   000E77                     B5D1            equ	3703	;# 
   243   000E78                     B5D2            equ	3704	;# 
   244   000E79                     B5D3            equ	3705	;# 
   245   000E7A                     B5D4            equ	3706	;# 
   246   000E7B                     B5D5            equ	3707	;# 
   247   000E7C                     B5D6            equ	3708	;# 
   248   000E7D                     B5D7            equ	3709	;# 
   249   000E7E                     CANSTAT_RO4     equ	3710	;# 
   250   000E7F                     CANCON_RO4      equ	3711	;# 
   251   000F00                     RXF0SIDH        equ	3840	;# 
   252   000F01                     RXF0SIDL        equ	3841	;# 
   253   000F02                     RXF0EIDH        equ	3842	;# 
   254   000F03                     RXF0EIDL        equ	3843	;# 
   255   000F04                     RXF1SIDH        equ	3844	;# 
   256   000F05                     RXF1SIDL        equ	3845	;# 
   257   000F06                     RXF1EIDH        equ	3846	;# 
   258   000F07                     RXF1EIDL        equ	3847	;# 
   259   000F08                     RXF2SIDH        equ	3848	;# 
   260   000F09                     RXF2SIDL        equ	3849	;# 
   261   000F0A                     RXF2EIDH        equ	3850	;# 
   262   000F0B                     RXF2EIDL        equ	3851	;# 
   263   000F0C                     RXF3SIDH        equ	3852	;# 
   264   000F0D                     RXF3SIDL        equ	3853	;# 
   265   000F0E                     RXF3EIDH        equ	3854	;# 
   266   000F0F                     RXF3EIDL        equ	3855	;# 
   267   000F10                     RXF4SIDH        equ	3856	;# 
   268   000F11                     RXF4SIDL        equ	3857	;# 
   269   000F12                     RXF4EIDH        equ	3858	;# 
   270   000F13                     RXF4EIDL        equ	3859	;# 
   271   000F14                     RXF5SIDH        equ	3860	;# 
   272   000F15                     RXF5SIDL        equ	3861	;# 
   273   000F16                     RXF5EIDH        equ	3862	;# 
   274   000F17                     RXF5EIDL        equ	3863	;# 
   275   000F18                     RXM0SIDH        equ	3864	;# 
   276   000F19                     RXM0SIDL        equ	3865	;# 
   277   000F1A                     RXM0EIDH        equ	3866	;# 
   278   000F1B                     RXM0EIDL        equ	3867	;# 
   279   000F1C                     RXM1SIDH        equ	3868	;# 
   280   000F1D                     RXM1SIDL        equ	3869	;# 
   281   000F1E                     RXM1EIDH        equ	3870	;# 
   282   000F1F                     RXM1EIDL        equ	3871	;# 
   283   000F20                     TXB2CON         equ	3872	;# 
   284   000F21                     TXB2SIDH        equ	3873	;# 
   285   000F22                     TXB2SIDL        equ	3874	;# 
   286   000F23                     TXB2EIDH        equ	3875	;# 
   287   000F24                     TXB2EIDL        equ	3876	;# 
   288   000F25                     TXB2DLC         equ	3877	;# 
   289   000F26                     TXB2D0          equ	3878	;# 
   290   000F27                     TXB2D1          equ	3879	;# 
   291   000F28                     TXB2D2          equ	3880	;# 
   292   000F29                     TXB2D3          equ	3881	;# 
   293   000F2A                     TXB2D4          equ	3882	;# 
   294   000F2B                     TXB2D5          equ	3883	;# 
   295   000F2C                     TXB2D6          equ	3884	;# 
   296   000F2D                     TXB2D7          equ	3885	;# 
   297   000F2E                     CANSTAT_RO3     equ	3886	;# 
   298   000F2F                     CANCON_RO3      equ	3887	;# 
   299   000F30                     TXB1CON         equ	3888	;# 
   300   000F31                     TXB1SIDH        equ	3889	;# 
   301   000F32                     TXB1SIDL        equ	3890	;# 
   302   000F33                     TXB1EIDH        equ	3891	;# 
   303   000F34                     TXB1EIDL        equ	3892	;# 
   304   000F35                     TXB1DLC         equ	3893	;# 
   305   000F36                     TXB1D0          equ	3894	;# 
   306   000F37                     TXB1D1          equ	3895	;# 
   307   000F38                     TXB1D2          equ	3896	;# 
   308   000F39                     TXB1D3          equ	3897	;# 
   309   000F3A                     TXB1D4          equ	3898	;# 
   310   000F3B                     TXB1D5          equ	3899	;# 
   311   000F3C                     TXB1D6          equ	3900	;# 
   312   000F3D                     TXB1D7          equ	3901	;# 
   313   000F3E                     CANSTAT_RO2     equ	3902	;# 
   314   000F3F                     CANCON_RO2      equ	3903	;# 
   315   000F40                     TXB0CON         equ	3904	;# 
   316   000F41                     TXB0SIDH        equ	3905	;# 
   317   000F42                     TXB0SIDL        equ	3906	;# 
   318   000F43                     TXB0EIDH        equ	3907	;# 
   319   000F44                     TXB0EIDL        equ	3908	;# 
   320   000F45                     TXB0DLC         equ	3909	;# 
   321   000F46                     TXB0D0          equ	3910	;# 
   322   000F47                     TXB0D1          equ	3911	;# 
   323   000F48                     TXB0D2          equ	3912	;# 
   324   000F49                     TXB0D3          equ	3913	;# 
   325   000F4A                     TXB0D4          equ	3914	;# 
   326   000F4B                     TXB0D5          equ	3915	;# 
   327   000F4C                     TXB0D6          equ	3916	;# 
   328   000F4D                     TXB0D7          equ	3917	;# 
   329   000F4E                     CANSTAT_RO1     equ	3918	;# 
   330   000F4F                     CANCON_RO1      equ	3919	;# 
   331   000F50                     RXB1CON         equ	3920	;# 
   332   000F51                     RXB1SIDH        equ	3921	;# 
   333   000F52                     RXB1SIDL        equ	3922	;# 
   334   000F53                     RXB1EIDH        equ	3923	;# 
   335   000F54                     RXB1EIDL        equ	3924	;# 
   336   000F55                     RXB1DLC         equ	3925	;# 
   337   000F56                     RXB1D0          equ	3926	;# 
   338   000F57                     RXB1D1          equ	3927	;# 
   339   000F58                     RXB1D2          equ	3928	;# 
   340   000F59                     RXB1D3          equ	3929	;# 
   341   000F5A                     RXB1D4          equ	3930	;# 
   342   000F5B                     RXB1D5          equ	3931	;# 
   343   000F5C                     RXB1D6          equ	3932	;# 
   344   000F5D                     RXB1D7          equ	3933	;# 
   345   000F5E                     CANSTAT_RO0     equ	3934	;# 
   346   000F5F                     CANCON_RO0      equ	3935	;# 
   347   000F60                     RXB0CON         equ	3936	;# 
   348   000F61                     RXB0SIDH        equ	3937	;# 
   349   000F62                     RXB0SIDL        equ	3938	;# 
   350   000F63                     RXB0EIDH        equ	3939	;# 
   351   000F64                     RXB0EIDL        equ	3940	;# 
   352   000F65                     RXB0DLC         equ	3941	;# 
   353   000F66                     RXB0D0          equ	3942	;# 
   354   000F67                     RXB0D1          equ	3943	;# 
   355   000F68                     RXB0D2          equ	3944	;# 
   356   000F69                     RXB0D3          equ	3945	;# 
   357   000F6A                     RXB0D4          equ	3946	;# 
   358   000F6B                     RXB0D5          equ	3947	;# 
   359   000F6C                     RXB0D6          equ	3948	;# 
   360   000F6D                     RXB0D7          equ	3949	;# 
   361   000F6E                     CANSTAT         equ	3950	;# 
   362   000F6F                     CANCON          equ	3951	;# 
   363   000F70                     BRGCON1         equ	3952	;# 
   364   000F71                     BRGCON2         equ	3953	;# 
   365   000F72                     BRGCON3         equ	3954	;# 
   366   000F73                     CIOCON          equ	3955	;# 
   367   000F74                     COMSTAT         equ	3956	;# 
   368   000F75                     RXERRCNT        equ	3957	;# 
   369   000F76                     TXERRCNT        equ	3958	;# 
   370   000F77                     ECANCON         equ	3959	;# 
   371   000F80                     PORTA           equ	3968	;# 
   372   000F81                     PORTB           equ	3969	;# 
   373   000F82                     PORTC           equ	3970	;# 
   374   000F83                     PORTD           equ	3971	;# 
   375   000F84                     PORTE           equ	3972	;# 
   376   000F89                     LATA            equ	3977	;# 
   377   000F8A                     LATB            equ	3978	;# 
   378   000F8B                     LATC            equ	3979	;# 
   379   000F8C                     LATD            equ	3980	;# 
   380   000F8D                     LATE            equ	3981	;# 
   381   000F92                     TRISA           equ	3986	;# 
   382   000F92                     DDRA            equ	3986	;# 
   383   000F93                     TRISB           equ	3987	;# 
   384   000F93                     DDRB            equ	3987	;# 
   385   000F94                     TRISC           equ	3988	;# 
   386   000F94                     DDRC            equ	3988	;# 
   387   000F95                     TRISD           equ	3989	;# 
   388   000F95                     DDRD            equ	3989	;# 
   389   000F96                     TRISE           equ	3990	;# 
   390   000F96                     DDRE            equ	3990	;# 
   391   000F9B                     OSCTUNE         equ	3995	;# 
   392   000F9D                     PIE1            equ	3997	;# 
   393   000F9E                     PIR1            equ	3998	;# 
   394   000F9F                     IPR1            equ	3999	;# 
   395   000FA0                     PIE2            equ	4000	;# 
   396   000FA1                     PIR2            equ	4001	;# 
   397   000FA2                     IPR2            equ	4002	;# 
   398   000FA3                     PIE3            equ	4003	;# 
   399   000FA4                     PIR3            equ	4004	;# 
   400   000FA5                     IPR3            equ	4005	;# 
   401   000FA6                     EECON1          equ	4006	;# 
   402   000FA7                     EECON2          equ	4007	;# 
   403   000FA8                     EEDATA          equ	4008	;# 
   404   000FA9                     EEADR           equ	4009	;# 
   405   000FAB                     RCSTA           equ	4011	;# 
   406   000FAB                     RCSTA1          equ	4011	;# 
   407   000FAC                     TXSTA           equ	4012	;# 
   408   000FAC                     TXSTA1          equ	4012	;# 
   409   000FAD                     TXREG           equ	4013	;# 
   410   000FAD                     TXREG1          equ	4013	;# 
   411   000FAE                     RCREG           equ	4014	;# 
   412   000FAE                     RCREG1          equ	4014	;# 
   413   000FAF                     SPBRG           equ	4015	;# 
   414   000FAF                     SPBRG1          equ	4015	;# 
   415   000FB0                     SPBRGH          equ	4016	;# 
   416   000FB1                     T3CON           equ	4017	;# 
   417   000FB2                     TMR3            equ	4018	;# 
   418   000FB2                     TMR3L           equ	4018	;# 
   419   000FB3                     TMR3H           equ	4019	;# 
   420   000FB4                     CMCON           equ	4020	;# 
   421   000FB5                     CVRCON          equ	4021	;# 
   422   000FB6                     ECCP1AS         equ	4022	;# 
   423   000FB7                     ECCP1DEL        equ	4023	;# 
   424   000FB8                     BAUDCON         equ	4024	;# 
   425   000FB8                     BAUDCTL         equ	4024	;# 
   426   000FBA                     ECCP1CON        equ	4026	;# 
   427   000FBB                     ECCPR1          equ	4027	;# 
   428   000FBB                     ECCPR1L         equ	4027	;# 
   429   000FBC                     ECCPR1H         equ	4028	;# 
   430   000FBD                     CCP1CON         equ	4029	;# 
   431   000FBE                     CCPR1           equ	4030	;# 
   432   000FBE                     CCPR1L          equ	4030	;# 
   433   000FBF                     CCPR1H          equ	4031	;# 
   434   000FC0                     ADCON2          equ	4032	;# 
   435   000FC1                     ADCON1          equ	4033	;# 
   436   000FC2                     ADCON0          equ	4034	;# 
   437   000FC3                     ADRES           equ	4035	;# 
   438   000FC3                     ADRESL          equ	4035	;# 
   439   000FC4                     ADRESH          equ	4036	;# 
   440   000FC5                     SSPCON2         equ	4037	;# 
   441   000FC6                     SSPCON1         equ	4038	;# 
   442   000FC7                     SSPSTAT         equ	4039	;# 
   443   000FC8                     SSPADD          equ	4040	;# 
   444   000FC9                     SSPBUF          equ	4041	;# 
   445   000FCA                     T2CON           equ	4042	;# 
   446   000FCB                     PR2             equ	4043	;# 
   447   000FCB                     MEMCON          equ	4043	;# 
   448   000FCC                     TMR2            equ	4044	;# 
   449   000FCD                     T1CON           equ	4045	;# 
   450   000FCE                     TMR1            equ	4046	;# 
   451   000FCE                     TMR1L           equ	4046	;# 
   452   000FCF                     TMR1H           equ	4047	;# 
   453   000FD0                     RCON            equ	4048	;# 
   454   000FD1                     WDTCON          equ	4049	;# 
   455   000FD2                     HLVDCON         equ	4050	;# 
   456   000FD2                     LVDCON          equ	4050	;# 
   457   000FD3                     OSCCON          equ	4051	;# 
   458   000FD5                     T0CON           equ	4053	;# 
   459   000FD6                     TMR0            equ	4054	;# 
   460   000FD6                     TMR0L           equ	4054	;# 
   461   000FD7                     TMR0H           equ	4055	;# 
   462   000FD8                     STATUS          equ	4056	;# 
   463   000FD9                     FSR2            equ	4057	;# 
   464   000FD9                     FSR2L           equ	4057	;# 
   465   000FDA                     FSR2H           equ	4058	;# 
   466   000FDB                     PLUSW2          equ	4059	;# 
   467   000FDC                     PREINC2         equ	4060	;# 
   468   000FDD                     POSTDEC2        equ	4061	;# 
   469   000FDE                     POSTINC2        equ	4062	;# 
   470   000FDF                     INDF2           equ	4063	;# 
   471   000FE0                     BSR             equ	4064	;# 
   472   000FE1                     FSR1            equ	4065	;# 
   473   000FE1                     FSR1L           equ	4065	;# 
   474   000FE2                     FSR1H           equ	4066	;# 
   475   000FE3                     PLUSW1          equ	4067	;# 
   476   000FE4                     PREINC1         equ	4068	;# 
   477   000FE5                     POSTDEC1        equ	4069	;# 
   478   000FE6                     POSTINC1        equ	4070	;# 
   479   000FE7                     INDF1           equ	4071	;# 
   480   000FE8                     WREG            equ	4072	;# 
   481   000FE9                     FSR0            equ	4073	;# 
   482   000FE9                     FSR0L           equ	4073	;# 
   483   000FEA                     FSR0H           equ	4074	;# 
   484   000FEB                     PLUSW0          equ	4075	;# 
   485   000FEC                     PREINC0         equ	4076	;# 
   486   000FED                     POSTDEC0        equ	4077	;# 
   487   000FEE                     POSTINC0        equ	4078	;# 
   488   000FEF                     INDF0           equ	4079	;# 
   489   000FF0                     INTCON3         equ	4080	;# 
   490   000FF1                     INTCON2         equ	4081	;# 
   491   000FF2                     INTCON          equ	4082	;# 
   492   000FF3                     PROD            equ	4083	;# 
   493   000FF3                     PRODL           equ	4083	;# 
   494   000FF4                     PRODH           equ	4084	;# 
   495   000FF5                     TABLAT          equ	4085	;# 
   496   000FF6                     TBLPTR          equ	4086	;# 
   497   000FF6                     TBLPTRL         equ	4086	;# 
   498   000FF7                     TBLPTRH         equ	4087	;# 
   499   000FF8                     TBLPTRU         equ	4088	;# 
   500   000FF9                     PCLAT           equ	4089	;# 
   501   000FF9                     PC              equ	4089	;# 
   502   000FF9                     PCL             equ	4089	;# 
   503   000FFA                     PCLATH          equ	4090	;# 
   504   000FFB                     PCLATU          equ	4091	;# 
   505   000FFC                     STKPTR          equ	4092	;# 
   506   000FFD                     TOS             equ	4093	;# 
   507   000FFD                     TOSL            equ	4093	;# 
   508   000FFE                     TOSH            equ	4094	;# 
   509   000FFF                     TOSU            equ	4095	;# 
   510                           
   511                           	psect	smallconst
   512   000600                     __psmallconst:
   513                           	callstack 0
   514   000600  00                 	db	0
   515   000601                     _TestStr:
   516                           	callstack 0
   517   000601  00                 	db	0
   518   000602  7F                 	db	127
   519   000603  08                 	db	8
   520   000604  08                 	db	8
   521   000605  08                 	db	8
   522   000606  7F                 	db	127
   523   000607  00                 	db	0
   524   000608  7F                 	db	127
   525   000609  49                 	db	73
   526   00060A  49                 	db	73
   527   00060B  49                 	db	73
   528   00060C  41                 	db	65
   529   00060D  00                 	db	0
   530   00060E  7F                 	db	127
   531   00060F  40                 	db	64
   532   000610  40                 	db	64
   533   000611  40                 	db	64
   534   000612  40                 	db	64
   535   000613  00                 	db	0
   536   000614  7F                 	db	127
   537   000615  40                 	db	64
   538   000616  40                 	db	64
   539   000617  40                 	db	64
   540   000618  40                 	db	64
   541   000619  00                 	db	0
   542   00061A  3E                 	db	62
   543   00061B  41                 	db	65
   544   00061C  41                 	db	65
   545   00061D  41                 	db	65
   546   00061E  3E                 	db	62
   547   00061F  00                 	db	0
   548   000620  00                 	db	0
   549   000621  00                 	db	0
   550   000622  00                 	db	0
   551   000623  00                 	db	0
   552   000624  00                 	db	0
   553   000625  00                 	db	0
   554   000626  7F                 	db	127
   555   000627  20                 	db	32
   556   000628  10                 	db	16
   557   000629  20                 	db	32
   558   00062A  7F                 	db	127
   559   00062B  00                 	db	0
   560   00062C  3E                 	db	62
   561   00062D  41                 	db	65
   562   00062E  41                 	db	65
   563   00062F  41                 	db	65
   564   000630  3E                 	db	62
   565   000631  00                 	db	0
   566   000632  7F                 	db	127
   567   000633  09                 	db	9
   568   000634  09                 	db	9
   569   000635  09                 	db	9
   570   000636  76                 	db	118
   571   000637  00                 	db	0
   572   000638  7F                 	db	127
   573   000639  40                 	db	64
   574   00063A  40                 	db	64
   575   00063B  40                 	db	64
   576   00063C  40                 	db	64
   577   00063D  00                 	db	0
   578   00063E  7F                 	db	127
   579   00063F  41                 	db	65
   580   000640  41                 	db	65
   581   000641  41                 	db	65
   582   000642  3E                 	db	62
   583   000643                     __end_of_TestStr:
   584                           	callstack 0
   585   000FC9                     _SSPBUF         set	4041
   586   000FC7                     _SSPSTAT        set	4039
   587   000FC8                     _SSPADD         set	4040
   588   000FC5                     _SSPCON2        set	4037
   589   000FC6                     _SSPCON1        set	4038
   590   000F8C                     _LATDbits       set	3980
   591   000F94                     _TRISC          set	3988
   592   000F95                     _TRISD          set	3989
   593   000FD3                     _OSCCON         set	4051
   594   007CF3                     _SSPIF          set	31987
   595   007E2A                     _PEN            set	32298
   596   007E28                     _SEN            set	32296
   597   000643  00                 	db	0	; dummy byte at the end
   598   000600                     __smallconst    set	__psmallconst
   599   000600                     __mediumconst   set	__psmallconst
   600   000001                     __activetblptr  equ	1
   601                           
   602                           ; #config settings
   603                           
   604                           	psect	cinit
   605   00098A                     __pcinit:
   606                           	callstack 0
   607   00098A                     start_initialization:
   608                           	callstack 0
   609   00098A                     __initialization:
   610                           	callstack 0
   611   00098A                     end_of_initialization:
   612                           	callstack 0
   613   00098A                     __end_of__initialization:
   614                           	callstack 0
   615   00098A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   616   00098C  6EF8               	movwf	tblptru,c
   617   00098E  0E06               	movlw	high __Lsmallconst
   618   000990  6EF7               	movwf	tblptrh,c
   619   000992  0100               	movlb	0
   620   000994  EF22  F003         	goto	_main	;jump to C main() function
   621                           
   622                           	psect	cstackCOMRAM
   623   000001                     __pcstackCOMRAM:
   624                           	callstack 0
   625   000001                     ??_I2C_Hold:
   626                           
   627                           ; 1 bytes @ 0x0
   628   000001                     	ds	1
   629   000002                     I2C_Write@data:
   630                           	callstack 0
   631   000002                     
   632                           ; 1 bytes @ 0x1
   633   000002                     	ds	1
   634   000003                     SSD1306_WriteCommand@cmd:
   635                           	callstack 0
   636   000003                     SSD1306_String@numChar:
   637                           	callstack 0
   638   000003                     SSD1306_ClearScreen@i:
   639                           	callstack 0
   640   000003                     
   641                           ; 1 bytes @ 0x2
   642   000003                     	ds	1
   643   000004                     
   644                           ; 1 bytes @ 0x3
   645   000004                     	ds	1
   646   000005                     SSD1306_String@data:
   647                           	callstack 0
   648   000005                     SSD1306_ClearScreen@j:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x4
   652   000005                     	ds	1
   653   000006                     ??_SSD1306_String:
   654                           
   655                           ; 1 bytes @ 0x5
   656   000006                     	ds	3
   657   000009                     SSD1306_String@i:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x8
   661   000009                     	ds	2
   662   00000B                     ??_main:
   663                           
   664                           ; 1 bytes @ 0xA
   665   00000B                     	ds	2
   666                           
   667 ;;
   668 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   669 ;;
   670 ;; *************** function _main *****************
   671 ;; Defined at:
   672 ;;		line 92 in file "main.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;		None
   675 ;; Auto vars:     Size  Location     Type
   676 ;;		None
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      void 
   679 ;; Registers used:
   680 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   686 ;;      Params:         0       0       0       0       0       0       0
   687 ;;      Locals:         0       0       0       0       0       0       0
   688 ;;      Temps:          2       0       0       0       0       0       0
   689 ;;      Totals:         2       0       0       0       0       0       0
   690 ;;Total ram usage:        2 bytes
   691 ;; Hardware stack levels required when called: 4
   692 ;; This function calls:
   693 ;;		_I2C_Init
   694 ;;		_SSD1306_ClearScreen
   695 ;;		_SSD1306_Init
   696 ;;		_SSD1306_String
   697 ;; This function is called by:
   698 ;;		Startup code after reset
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           	psect	text0
   703   000644                     __ptext0:
   704                           	callstack 0
   705   000644                     _main:
   706                           	callstack 27
   707   000644                     
   708                           ;main.c: 93:     OSCCON = 0b01100010;
   709   000644  0E62               	movlw	98
   710   000646  6ED3               	movwf	211,c	;volatile
   711   000648                     
   712                           ;main.c: 94:     TRISD = 0x00;
   713   000648  6A95               	clrf	149,c	;volatile
   714   00064A                     
   715                           ;main.c: 95:     TRISC = 0xFF;
   716   00064A  6894               	setf	148,c	;volatile
   717   00064C                     
   718                           ;main.c: 97:     _delay((unsigned long)((500)*(4000000/4000.0)));
   719   00064C  0E03               	movlw	3
   720   00064E  6E0C               	movwf	(??_main+1)^0,c
   721   000650  0E8A               	movlw	138
   722   000652  6E0B               	movwf	??_main^0,c
   723   000654  0E56               	movlw	86
   724   000656                     u107:
   725   000656  2EE8               	decfsz	wreg,f,c
   726   000658  D7FE               	bra	u107
   727   00065A  2E0B               	decfsz	??_main^0,f,c
   728   00065C  D7FC               	bra	u107
   729   00065E  2E0C               	decfsz	(??_main+1)^0,f,c
   730   000660  D7FA               	bra	u107
   731   000662                     
   732                           ;main.c: 98:     I2C_Init();
   733   000662  ECCC  F004         	call	_I2C_Init	;wreg free
   734   000666                     
   735                           ;main.c: 99:     _delay((unsigned long)((500)*(4000000/4000.0)));
   736   000666  0E03               	movlw	3
   737   000668  6E0C               	movwf	(??_main+1)^0,c
   738   00066A  0E8A               	movlw	138
   739   00066C  6E0B               	movwf	??_main^0,c
   740   00066E  0E56               	movlw	86
   741   000670                     u117:
   742   000670  2EE8               	decfsz	wreg,f,c
   743   000672  D7FE               	bra	u117
   744   000674  2E0B               	decfsz	??_main^0,f,c
   745   000676  D7FC               	bra	u117
   746   000678  2E0C               	decfsz	(??_main+1)^0,f,c
   747   00067A  D7FA               	bra	u117
   748   00067C                     
   749                           ;main.c: 100:     SSD1306_Init();
   750   00067C  EC87  F003         	call	_SSD1306_Init	;wreg free
   751   000680                     
   752                           ;main.c: 101:     _delay((unsigned long)((500)*(4000000/4000.0)));
   753   000680  0E03               	movlw	3
   754   000682  6E0C               	movwf	(??_main+1)^0,c
   755   000684  0E8A               	movlw	138
   756   000686  6E0B               	movwf	??_main^0,c
   757   000688  0E56               	movlw	86
   758   00068A                     u127:
   759   00068A  2EE8               	decfsz	wreg,f,c
   760   00068C  D7FE               	bra	u127
   761   00068E  2E0B               	decfsz	??_main^0,f,c
   762   000690  D7FC               	bra	u127
   763   000692  2E0C               	decfsz	(??_main+1)^0,f,c
   764   000694  D7FA               	bra	u127
   765   000696                     
   766                           ;main.c: 102:     SSD1306_ClearScreen();
   767   000696  ECDD  F003         	call	_SSD1306_ClearScreen	;wreg free
   768   00069A                     
   769                           ;main.c: 103:     _delay((unsigned long)((500)*(4000000/4000.0)));
   770   00069A  0E03               	movlw	3
   771   00069C  6E0C               	movwf	(??_main+1)^0,c
   772   00069E  0E8A               	movlw	138
   773   0006A0  6E0B               	movwf	??_main^0,c
   774   0006A2  0E56               	movlw	86
   775   0006A4                     u137:
   776   0006A4  2EE8               	decfsz	wreg,f,c
   777   0006A6  D7FE               	bra	u137
   778   0006A8  2E0B               	decfsz	??_main^0,f,c
   779   0006AA  D7FC               	bra	u137
   780   0006AC  2E0C               	decfsz	(??_main+1)^0,f,c
   781   0006AE  D7FA               	bra	u137
   782   0006B0                     
   783                           ;main.c: 104:     SSD1306_String(11, &TestStr);
   784   0006B0  0E00               	movlw	0
   785   0006B2  6E04               	movwf	(SSD1306_String@numChar+1)^0,c
   786   0006B4  0E0B               	movlw	11
   787   0006B6  6E03               	movwf	SSD1306_String@numChar^0,c
   788   0006B8  0E01               	movlw	low _TestStr
   789   0006BA  6E05               	movwf	SSD1306_String@data^0,c
   790   0006BC  EC2F  F004         	call	_SSD1306_String	;wreg free
   791   0006C0                     
   792                           ;main.c: 105:     _delay((unsigned long)((500)*(4000000/4000.0)));
   793   0006C0  0E03               	movlw	3
   794   0006C2  6E0C               	movwf	(??_main+1)^0,c
   795   0006C4  0E8A               	movlw	138
   796   0006C6  6E0B               	movwf	??_main^0,c
   797   0006C8  0E56               	movlw	86
   798   0006CA                     u147:
   799   0006CA  2EE8               	decfsz	wreg,f,c
   800   0006CC  D7FE               	bra	u147
   801   0006CE  2E0B               	decfsz	??_main^0,f,c
   802   0006D0  D7FC               	bra	u147
   803   0006D2  2E0C               	decfsz	(??_main+1)^0,f,c
   804   0006D4  D7FA               	bra	u147
   805   0006D6                     l902:
   806                           
   807                           ;main.c: 108:         LATDbits.LATD1 = 0;
   808   0006D6  928C               	bcf	140,1,c	;volatile
   809   0006D8                     
   810                           ;main.c: 109:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   811   0006D8  0E06               	movlw	6
   812   0006DA  6E0C               	movwf	(??_main+1)^0,c
   813   0006DC  0E13               	movlw	19
   814   0006DE  6E0B               	movwf	??_main^0,c
   815   0006E0  0EAE               	movlw	174
   816   0006E2                     u157:
   817   0006E2  2EE8               	decfsz	wreg,f,c
   818   0006E4  D7FE               	bra	u157
   819   0006E6  2E0B               	decfsz	??_main^0,f,c
   820   0006E8  D7FC               	bra	u157
   821   0006EA  2E0C               	decfsz	(??_main+1)^0,f,c
   822   0006EC  D7FA               	bra	u157
   823   0006EE                     
   824                           ;main.c: 110:         LATDbits.LATD1 = 1;
   825   0006EE  828C               	bsf	140,1,c	;volatile
   826   0006F0                     
   827                           ;main.c: 111:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   828   0006F0  0E06               	movlw	6
   829   0006F2  6E0C               	movwf	(??_main+1)^0,c
   830   0006F4  0E13               	movlw	19
   831   0006F6  6E0B               	movwf	??_main^0,c
   832   0006F8  0EAE               	movlw	174
   833   0006FA                     u167:
   834   0006FA  2EE8               	decfsz	wreg,f,c
   835   0006FC  D7FE               	bra	u167
   836   0006FE  2E0B               	decfsz	??_main^0,f,c
   837   000700  D7FC               	bra	u167
   838   000702  2E0C               	decfsz	(??_main+1)^0,f,c
   839   000704  D7FA               	bra	u167
   840   000706  EF6B  F003         	goto	l902
   841   00070A  EFFE  F03F         	goto	start
   842   00070E                     __end_of_main:
   843                           	callstack 0
   844                           
   845 ;; *************** function _SSD1306_String *****************
   846 ;; Defined at:
   847 ;;		line 188 in file "main.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;  numChar         2    2[COMRAM] int 
   850 ;;  data            1    4[COMRAM] PTR const unsigned char 
   851 ;;		 -> TestStr(66), 
   852 ;; Auto vars:     Size  Location     Type
   853 ;;  i               2    8[COMRAM] int 
   854 ;; Return value:  Size  Location     Type
   855 ;;                  1    wreg      void 
   856 ;; Registers used:
   857 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   863 ;;      Params:         3       0       0       0       0       0       0
   864 ;;      Locals:         2       0       0       0       0       0       0
   865 ;;      Temps:          3       0       0       0       0       0       0
   866 ;;      Totals:         8       0       0       0       0       0       0
   867 ;;Total ram usage:        8 bytes
   868 ;; Hardware stack levels used: 1
   869 ;; Hardware stack levels required when called: 2
   870 ;; This function calls:
   871 ;;		_I2C_Start
   872 ;;		_I2C_Stop
   873 ;;		_I2C_Write
   874 ;; This function is called by:
   875 ;;		_main
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           	psect	text1
   880   00085E                     __ptext1:
   881                           	callstack 0
   882   00085E                     _SSD1306_String:
   883                           	callstack 28
   884   00085E                     
   885                           ;main.c: 189:  I2C_Start();
   886   00085E  ECBA  F004         	call	_I2C_Start	;wreg free
   887                           
   888                           ;main.c: 190:  I2C_Write(0x78);
   889   000862  0E78               	movlw	120
   890   000864  ECA1  F004         	call	_I2C_Write
   891                           
   892                           ;main.c: 191:  I2C_Write(0x00);
   893   000868  0E00               	movlw	0
   894   00086A  ECA1  F004         	call	_I2C_Write
   895                           
   896                           ;main.c: 192:  I2C_Write(0x21);
   897   00086E  0E21               	movlw	33
   898   000870  ECA1  F004         	call	_I2C_Write
   899                           
   900                           ;main.c: 193:  I2C_Write(0);
   901   000874  0E00               	movlw	0
   902   000876  ECA1  F004         	call	_I2C_Write
   903                           
   904                           ;main.c: 194:  I2C_Write(127);
   905   00087A  0E7F               	movlw	127
   906   00087C  ECA1  F004         	call	_I2C_Write
   907                           
   908                           ;main.c: 195:  I2C_Write(0x22);
   909   000880  0E22               	movlw	34
   910   000882  ECA1  F004         	call	_I2C_Write
   911                           
   912                           ;main.c: 196:  I2C_Write(0);
   913   000886  0E00               	movlw	0
   914   000888  ECA1  F004         	call	_I2C_Write
   915                           
   916                           ;main.c: 197:  I2C_Write(7);
   917   00088C  0E07               	movlw	7
   918   00088E  ECA1  F004         	call	_I2C_Write
   919                           
   920                           ;main.c: 198:  I2C_Stop();
   921   000892  ECAF  F004         	call	_I2C_Stop	;wreg free
   922   000896                     
   923                           ;main.c: 200:  for (int i=0; i<(numChar*6); i++){
   924   000896  0E00               	movlw	0
   925   000898  6E0A               	movwf	(SSD1306_String@i+1)^0,c
   926   00089A  0E00               	movlw	0
   927   00089C  6E09               	movwf	SSD1306_String@i^0,c
   928   00089E  EF66  F004         	goto	l876
   929   0008A2                     l868:
   930                           
   931                           ;main.c: 201:   I2C_Start();
   932   0008A2  ECBA  F004         	call	_I2C_Start	;wreg free
   933                           
   934                           ;main.c: 202:   I2C_Write(0x78);
   935   0008A6  0E78               	movlw	120
   936   0008A8  ECA1  F004         	call	_I2C_Write
   937                           
   938                           ;main.c: 203:   I2C_Write(0x40);
   939   0008AC  0E40               	movlw	64
   940   0008AE  ECA1  F004         	call	_I2C_Write
   941   0008B2                     
   942                           ;main.c: 204:   I2C_Write(data[i]);
   943   0008B2  5005               	movf	SSD1306_String@data^0,w,c
   944   0008B4  2409               	addwf	SSD1306_String@i^0,w,c
   945   0008B6  6E06               	movwf	??_SSD1306_String^0,c
   946   0008B8  C006  FFF6         	movff	??_SSD1306_String,tblptrl
   947   0008BC                     	if	0	;There is only one active tblptr byte
   948   0008BC                     	endif
   949   0008BC                     	if	0	;tblptru may be non-zero
   950   0008BC                     	endif
   951   0008BC                     	if	0	;tblptru may be non-zero
   952   0008BC                     	endif
   953   0008BC  0008               	tblrd		*
   954   0008BE  50F5               	movf	tablat,w,c
   955   0008C0  ECA1  F004         	call	_I2C_Write
   956   0008C4                     
   957                           ;main.c: 205:   I2C_Stop();
   958   0008C4  ECAF  F004         	call	_I2C_Stop	;wreg free
   959   0008C8                     
   960                           ;main.c: 206:  }
   961   0008C8  4A09               	infsnz	SSD1306_String@i^0,f,c
   962   0008CA  2A0A               	incf	(SSD1306_String@i+1)^0,f,c
   963   0008CC                     l876:
   964   0008CC  0E06               	movlw	6
   965   0008CE  0203               	mulwf	SSD1306_String@numChar^0,c
   966   0008D0  CFF3 F006          	movff	prodl,??_SSD1306_String
   967   0008D4  CFF4 F007          	movff	prodh,??_SSD1306_String+1
   968   0008D8  0204               	mulwf	(SSD1306_String@numChar+1)^0,c
   969   0008DA  50F3               	movf	prodl,w,c
   970   0008DC  2607               	addwf	(??_SSD1306_String+1)^0,f,c
   971   0008DE  5006               	movf	??_SSD1306_String^0,w,c
   972   0008E0  5C09               	subwf	SSD1306_String@i^0,w,c
   973   0008E2  500A               	movf	(SSD1306_String@i+1)^0,w,c
   974   0008E4  0A80               	xorlw	128
   975   0008E6  6E08               	movwf	(??_SSD1306_String+2)^0,c
   976   0008E8  5007               	movf	(??_SSD1306_String+1)^0,w,c
   977   0008EA  0A80               	xorlw	128
   978   0008EC  5808               	subwfb	(??_SSD1306_String+2)^0,w,c
   979   0008EE  A0D8               	btfss	status,0,c
   980   0008F0  EF7C  F004         	goto	u91
   981   0008F4  EF7E  F004         	goto	u90
   982   0008F8                     u91:
   983   0008F8  EF51  F004         	goto	l868
   984   0008FC                     u90:
   985   0008FC  0012               	return		;funcret
   986   0008FE                     __end_of_SSD1306_String:
   987                           	callstack 0
   988                           
   989 ;; *************** function _SSD1306_Init *****************
   990 ;; Defined at:
   991 ;;		line 154 in file "main.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;		None
   994 ;; Auto vars:     Size  Location     Type
   995 ;;		None
   996 ;; Return value:  Size  Location     Type
   997 ;;                  1    wreg      void 
   998 ;; Registers used:
   999 ;;		wreg, status,2, status,0, cstack
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1005 ;;      Params:         0       0       0       0       0       0       0
  1006 ;;      Locals:         0       0       0       0       0       0       0
  1007 ;;      Temps:          0       0       0       0       0       0       0
  1008 ;;      Totals:         0       0       0       0       0       0       0
  1009 ;;Total ram usage:        0 bytes
  1010 ;; Hardware stack levels used: 1
  1011 ;; Hardware stack levels required when called: 3
  1012 ;; This function calls:
  1013 ;;		_I2C_Start
  1014 ;;		_I2C_Stop
  1015 ;;		_I2C_Write
  1016 ;;		_SSD1306_WriteCommand
  1017 ;; This function is called by:
  1018 ;;		_main
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           	psect	text2
  1023   00070E                     __ptext2:
  1024                           	callstack 0
  1025   00070E                     _SSD1306_Init:
  1026                           	callstack 27
  1027   00070E                     
  1028                           ;main.c: 155:  I2C_Start();
  1029   00070E  ECBA  F004         	call	_I2C_Start	;wreg free
  1030                           
  1031                           ;main.c: 156:  I2C_Write(0x78);
  1032   000712  0E78               	movlw	120
  1033   000714  ECA1  F004         	call	_I2C_Write
  1034                           
  1035                           ;main.c: 157:  I2C_Write(0x00);
  1036   000718  0E00               	movlw	0
  1037   00071A  ECA1  F004         	call	_I2C_Write
  1038                           
  1039                           ;main.c: 159:  SSD1306_WriteCommand(0xAE);
  1040   00071E  0EAE               	movlw	174
  1041   000720  EC92  F004         	call	_SSD1306_WriteCommand
  1042                           
  1043                           ;main.c: 160:  SSD1306_WriteCommand(0xD5);
  1044   000724  0ED5               	movlw	213
  1045   000726  EC92  F004         	call	_SSD1306_WriteCommand
  1046                           
  1047                           ;main.c: 161:  SSD1306_WriteCommand(0x80);
  1048   00072A  0E80               	movlw	128
  1049   00072C  EC92  F004         	call	_SSD1306_WriteCommand
  1050                           
  1051                           ;main.c: 162:  SSD1306_WriteCommand(0xA8);
  1052   000730  0EA8               	movlw	168
  1053   000732  EC92  F004         	call	_SSD1306_WriteCommand
  1054                           
  1055                           ;main.c: 163:  SSD1306_WriteCommand(0x3F);
  1056   000736  0E3F               	movlw	63
  1057   000738  EC92  F004         	call	_SSD1306_WriteCommand
  1058                           
  1059                           ;main.c: 164:  SSD1306_WriteCommand(0xD3);
  1060   00073C  0ED3               	movlw	211
  1061   00073E  EC92  F004         	call	_SSD1306_WriteCommand
  1062                           
  1063                           ;main.c: 165:  SSD1306_WriteCommand(0x00);
  1064   000742  0E00               	movlw	0
  1065   000744  EC92  F004         	call	_SSD1306_WriteCommand
  1066                           
  1067                           ;main.c: 166:  SSD1306_WriteCommand(0x40);
  1068   000748  0E40               	movlw	64
  1069   00074A  EC92  F004         	call	_SSD1306_WriteCommand
  1070                           
  1071                           ;main.c: 167:  SSD1306_WriteCommand(0x8D);
  1072   00074E  0E8D               	movlw	141
  1073   000750  EC92  F004         	call	_SSD1306_WriteCommand
  1074                           
  1075                           ;main.c: 168:  SSD1306_WriteCommand(0x14);
  1076   000754  0E14               	movlw	20
  1077   000756  EC92  F004         	call	_SSD1306_WriteCommand
  1078                           
  1079                           ;main.c: 169:  SSD1306_WriteCommand(0x20);
  1080   00075A  0E20               	movlw	32
  1081   00075C  EC92  F004         	call	_SSD1306_WriteCommand
  1082                           
  1083                           ;main.c: 170:  SSD1306_WriteCommand(0x00);
  1084   000760  0E00               	movlw	0
  1085   000762  EC92  F004         	call	_SSD1306_WriteCommand
  1086                           
  1087                           ;main.c: 171:  SSD1306_WriteCommand(0xA1);
  1088   000766  0EA1               	movlw	161
  1089   000768  EC92  F004         	call	_SSD1306_WriteCommand
  1090                           
  1091                           ;main.c: 172:  SSD1306_WriteCommand(0xC8);
  1092   00076C  0EC8               	movlw	200
  1093   00076E  EC92  F004         	call	_SSD1306_WriteCommand
  1094                           
  1095                           ;main.c: 173:  SSD1306_WriteCommand(0xDA);
  1096   000772  0EDA               	movlw	218
  1097   000774  EC92  F004         	call	_SSD1306_WriteCommand
  1098                           
  1099                           ;main.c: 174:  SSD1306_WriteCommand(0x12);
  1100   000778  0E12               	movlw	18
  1101   00077A  EC92  F004         	call	_SSD1306_WriteCommand
  1102                           
  1103                           ;main.c: 175:  SSD1306_WriteCommand(0x81);
  1104   00077E  0E81               	movlw	129
  1105   000780  EC92  F004         	call	_SSD1306_WriteCommand
  1106                           
  1107                           ;main.c: 176:  SSD1306_WriteCommand(0x7F);
  1108   000784  0E7F               	movlw	127
  1109   000786  EC92  F004         	call	_SSD1306_WriteCommand
  1110                           
  1111                           ;main.c: 177:  SSD1306_WriteCommand(0xD9);
  1112   00078A  0ED9               	movlw	217
  1113   00078C  EC92  F004         	call	_SSD1306_WriteCommand
  1114                           
  1115                           ;main.c: 178:  SSD1306_WriteCommand(0xF1);
  1116   000790  0EF1               	movlw	241
  1117   000792  EC92  F004         	call	_SSD1306_WriteCommand
  1118                           
  1119                           ;main.c: 179:  SSD1306_WriteCommand(0xDB);
  1120   000796  0EDB               	movlw	219
  1121   000798  EC92  F004         	call	_SSD1306_WriteCommand
  1122                           
  1123                           ;main.c: 180:  SSD1306_WriteCommand(0x40);
  1124   00079C  0E40               	movlw	64
  1125   00079E  EC92  F004         	call	_SSD1306_WriteCommand
  1126                           
  1127                           ;main.c: 181:  SSD1306_WriteCommand(0xA4);
  1128   0007A2  0EA4               	movlw	164
  1129   0007A4  EC92  F004         	call	_SSD1306_WriteCommand
  1130                           
  1131                           ;main.c: 182:  SSD1306_WriteCommand(0xA6);
  1132   0007A8  0EA6               	movlw	166
  1133   0007AA  EC92  F004         	call	_SSD1306_WriteCommand
  1134                           
  1135                           ;main.c: 183:  SSD1306_WriteCommand(0xAF);
  1136   0007AE  0EAF               	movlw	175
  1137   0007B0  EC92  F004         	call	_SSD1306_WriteCommand
  1138                           
  1139                           ;main.c: 185:  I2C_Stop();
  1140   0007B4  ECAF  F004         	call	_I2C_Stop	;wreg free
  1141   0007B8  0012               	return		;funcret
  1142   0007BA                     __end_of_SSD1306_Init:
  1143                           	callstack 0
  1144                           
  1145 ;; *************** function _SSD1306_WriteCommand *****************
  1146 ;; Defined at:
  1147 ;;		line 146 in file "main.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;  cmd             1    wreg     unsigned char 
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;  cmd             1    2[COMRAM] unsigned char 
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      void 
  1154 ;; Registers used:
  1155 ;;		wreg, status,2, status,0, cstack
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1161 ;;      Params:         0       0       0       0       0       0       0
  1162 ;;      Locals:         1       0       0       0       0       0       0
  1163 ;;      Temps:          0       0       0       0       0       0       0
  1164 ;;      Totals:         1       0       0       0       0       0       0
  1165 ;;Total ram usage:        1 bytes
  1166 ;; Hardware stack levels used: 1
  1167 ;; Hardware stack levels required when called: 2
  1168 ;; This function calls:
  1169 ;;		_I2C_Start
  1170 ;;		_I2C_Stop
  1171 ;;		_I2C_Write
  1172 ;; This function is called by:
  1173 ;;		_SSD1306_Init
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           	psect	text3
  1178   000924                     __ptext3:
  1179                           	callstack 0
  1180   000924                     _SSD1306_WriteCommand:
  1181                           	callstack 27
  1182                           
  1183                           ;incstack = 0
  1184                           ;SSD1306_WriteCommand@cmd stored from wreg
  1185   000924  6E03               	movwf	SSD1306_WriteCommand@cmd^0,c
  1186   000926                     
  1187                           ;main.c: 147:  I2C_Start();
  1188   000926  ECBA  F004         	call	_I2C_Start	;wreg free
  1189                           
  1190                           ;main.c: 148:  I2C_Write(0x78);
  1191   00092A  0E78               	movlw	120
  1192   00092C  ECA1  F004         	call	_I2C_Write
  1193                           
  1194                           ;main.c: 149:  I2C_Write(0x00);
  1195   000930  0E00               	movlw	0
  1196   000932  ECA1  F004         	call	_I2C_Write
  1197                           
  1198                           ;main.c: 150:  I2C_Write(cmd);
  1199   000936  5003               	movf	SSD1306_WriteCommand@cmd^0,w,c
  1200   000938  ECA1  F004         	call	_I2C_Write
  1201                           
  1202                           ;main.c: 151:  I2C_Stop();
  1203   00093C  ECAF  F004         	call	_I2C_Stop	;wreg free
  1204   000940  0012               	return		;funcret
  1205   000942                     __end_of_SSD1306_WriteCommand:
  1206                           	callstack 0
  1207                           
  1208 ;; *************** function _SSD1306_ClearScreen *****************
  1209 ;; Defined at:
  1210 ;;		line 209 in file "main.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;		None
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;  j               2    4[COMRAM] int 
  1215 ;;  i               2    2[COMRAM] int 
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  1    wreg      void 
  1218 ;; Registers used:
  1219 ;;		wreg, status,2, status,0, cstack
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1225 ;;      Params:         0       0       0       0       0       0       0
  1226 ;;      Locals:         4       0       0       0       0       0       0
  1227 ;;      Temps:          0       0       0       0       0       0       0
  1228 ;;      Totals:         4       0       0       0       0       0       0
  1229 ;;Total ram usage:        4 bytes
  1230 ;; Hardware stack levels used: 1
  1231 ;; Hardware stack levels required when called: 2
  1232 ;; This function calls:
  1233 ;;		_I2C_Start
  1234 ;;		_I2C_Stop
  1235 ;;		_I2C_Write
  1236 ;; This function is called by:
  1237 ;;		_main
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           	psect	text4
  1242   0007BA                     __ptext4:
  1243                           	callstack 0
  1244   0007BA                     _SSD1306_ClearScreen:
  1245                           	callstack 28
  1246   0007BA                     
  1247                           ;main.c: 210:  I2C_Start();
  1248   0007BA  ECBA  F004         	call	_I2C_Start	;wreg free
  1249                           
  1250                           ;main.c: 211:  I2C_Write(0x78);
  1251   0007BE  0E78               	movlw	120
  1252   0007C0  ECA1  F004         	call	_I2C_Write
  1253                           
  1254                           ;main.c: 212:  I2C_Write(0x00);
  1255   0007C4  0E00               	movlw	0
  1256   0007C6  ECA1  F004         	call	_I2C_Write
  1257                           
  1258                           ;main.c: 213:  I2C_Write(0x21);
  1259   0007CA  0E21               	movlw	33
  1260   0007CC  ECA1  F004         	call	_I2C_Write
  1261                           
  1262                           ;main.c: 214:  I2C_Write(0);
  1263   0007D0  0E00               	movlw	0
  1264   0007D2  ECA1  F004         	call	_I2C_Write
  1265                           
  1266                           ;main.c: 215:  I2C_Write(127);
  1267   0007D6  0E7F               	movlw	127
  1268   0007D8  ECA1  F004         	call	_I2C_Write
  1269                           
  1270                           ;main.c: 216:  I2C_Write(0x22);
  1271   0007DC  0E22               	movlw	34
  1272   0007DE  ECA1  F004         	call	_I2C_Write
  1273                           
  1274                           ;main.c: 217:  I2C_Write(0);
  1275   0007E2  0E00               	movlw	0
  1276   0007E4  ECA1  F004         	call	_I2C_Write
  1277                           
  1278                           ;main.c: 218:  I2C_Write(7);
  1279   0007E8  0E07               	movlw	7
  1280   0007EA  ECA1  F004         	call	_I2C_Write
  1281                           
  1282                           ;main.c: 219:  I2C_Stop();
  1283   0007EE  ECAF  F004         	call	_I2C_Stop	;wreg free
  1284   0007F2                     
  1285                           ;main.c: 221:  for (int i=0; i<8; i++) {
  1286   0007F2  0E00               	movlw	0
  1287   0007F4  6E04               	movwf	(SSD1306_ClearScreen@i+1)^0,c
  1288   0007F6  0E00               	movlw	0
  1289   0007F8  6E03               	movwf	SSD1306_ClearScreen@i^0,c
  1290   0007FA                     l802:
  1291                           
  1292                           ;main.c: 222:   for (int j=0; j<128; j++) {
  1293   0007FA  0E00               	movlw	0
  1294   0007FC  6E06               	movwf	(SSD1306_ClearScreen@j+1)^0,c
  1295   0007FE  0E00               	movlw	0
  1296   000800  6E05               	movwf	SSD1306_ClearScreen@j^0,c
  1297   000802                     l808:
  1298                           
  1299                           ;main.c: 223:    I2C_Start();
  1300   000802  ECBA  F004         	call	_I2C_Start	;wreg free
  1301                           
  1302                           ;main.c: 224:    I2C_Write(0x78);
  1303   000806  0E78               	movlw	120
  1304   000808  ECA1  F004         	call	_I2C_Write
  1305                           
  1306                           ;main.c: 225:    I2C_Write(0x40);
  1307   00080C  0E40               	movlw	64
  1308   00080E  ECA1  F004         	call	_I2C_Write
  1309                           
  1310                           ;main.c: 226:    I2C_Write(0x00);
  1311   000812  0E00               	movlw	0
  1312   000814  ECA1  F004         	call	_I2C_Write
  1313                           
  1314                           ;main.c: 227:    I2C_Stop();
  1315   000818  ECAF  F004         	call	_I2C_Stop	;wreg free
  1316   00081C                     
  1317                           ;main.c: 228:   }
  1318   00081C  4A05               	infsnz	SSD1306_ClearScreen@j^0,f,c
  1319   00081E  2A06               	incf	(SSD1306_ClearScreen@j+1)^0,f,c
  1320   000820  BE06               	btfsc	(SSD1306_ClearScreen@j+1)^0,7,c
  1321   000822  EF1C  F004         	goto	u61
  1322   000826  5006               	movf	(SSD1306_ClearScreen@j+1)^0,w,c
  1323   000828  E109               	bnz	u60
  1324   00082A  0E80               	movlw	128
  1325   00082C  5C05               	subwf	SSD1306_ClearScreen@j^0,w,c
  1326   00082E  A0D8               	btfss	status,0,c
  1327   000830  EF1C  F004         	goto	u61
  1328   000834  EF1E  F004         	goto	u60
  1329   000838                     u61:
  1330   000838  EF01  F004         	goto	l808
  1331   00083C                     u60:
  1332   00083C                     
  1333                           ;main.c: 229:  }
  1334   00083C  4A03               	infsnz	SSD1306_ClearScreen@i^0,f,c
  1335   00083E  2A04               	incf	(SSD1306_ClearScreen@i+1)^0,f,c
  1336   000840  BE04               	btfsc	(SSD1306_ClearScreen@i+1)^0,7,c
  1337   000842  EF2C  F004         	goto	u71
  1338   000846  5004               	movf	(SSD1306_ClearScreen@i+1)^0,w,c
  1339   000848  E109               	bnz	u70
  1340   00084A  0E08               	movlw	8
  1341   00084C  5C03               	subwf	SSD1306_ClearScreen@i^0,w,c
  1342   00084E  A0D8               	btfss	status,0,c
  1343   000850  EF2C  F004         	goto	u71
  1344   000854  EF2E  F004         	goto	u70
  1345   000858                     u71:
  1346   000858  EFFD  F003         	goto	l802
  1347   00085C                     u70:
  1348   00085C  0012               	return		;funcret
  1349   00085E                     __end_of_SSD1306_ClearScreen:
  1350                           	callstack 0
  1351                           
  1352 ;; *************** function _I2C_Write *****************
  1353 ;; Defined at:
  1354 ;;		line 139 in file "main.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;  data            1    wreg     unsigned char 
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;  data            1    1[COMRAM] unsigned char 
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      void 
  1361 ;; Registers used:
  1362 ;;		wreg, status,2, status,0, cstack
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1368 ;;      Params:         0       0       0       0       0       0       0
  1369 ;;      Locals:         1       0       0       0       0       0       0
  1370 ;;      Temps:          0       0       0       0       0       0       0
  1371 ;;      Totals:         1       0       0       0       0       0       0
  1372 ;;Total ram usage:        1 bytes
  1373 ;; Hardware stack levels used: 1
  1374 ;; Hardware stack levels required when called: 1
  1375 ;; This function calls:
  1376 ;;		_I2C_Hold
  1377 ;; This function is called by:
  1378 ;;		_SSD1306_WriteCommand
  1379 ;;		_SSD1306_Init
  1380 ;;		_SSD1306_String
  1381 ;;		_SSD1306_ClearScreen
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           	psect	text5
  1386   000942                     __ptext5:
  1387                           	callstack 0
  1388   000942                     _I2C_Write:
  1389                           	callstack 28
  1390                           
  1391                           ;incstack = 0
  1392                           ;I2C_Write@data stored from wreg
  1393   000942  6E02               	movwf	I2C_Write@data^0,c
  1394   000944                     
  1395                           ;main.c: 140:  I2C_Hold();
  1396   000944  EC7F  F004         	call	_I2C_Hold	;wreg free
  1397   000948                     
  1398                           ;main.c: 141:  SSPBUF = data;
  1399   000948  C002  FFC9         	movff	I2C_Write@data,4041	;volatile
  1400   00094C                     l68:
  1401   00094C  A69E               	btfss	3998,3,c	;volatile
  1402   00094E  EFAB  F004         	goto	u51
  1403   000952  EFAD  F004         	goto	u50
  1404   000956                     u51:
  1405   000956  EFA6  F004         	goto	l68
  1406   00095A                     u50:
  1407   00095A                     
  1408                           ;main.c: 143:  SSPIF = 0;
  1409   00095A  969E               	bcf	3998,3,c	;volatile
  1410   00095C  0012               	return		;funcret
  1411   00095E                     __end_of_I2C_Write:
  1412                           	callstack 0
  1413                           
  1414 ;; *************** function _I2C_Stop *****************
  1415 ;; Defined at:
  1416 ;;		line 133 in file "main.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;		None
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;		None
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  1    wreg      void 
  1423 ;; Registers used:
  1424 ;;		wreg, status,2, status,0, cstack
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1430 ;;      Params:         0       0       0       0       0       0       0
  1431 ;;      Locals:         0       0       0       0       0       0       0
  1432 ;;      Temps:          0       0       0       0       0       0       0
  1433 ;;      Totals:         0       0       0       0       0       0       0
  1434 ;;Total ram usage:        0 bytes
  1435 ;; Hardware stack levels used: 1
  1436 ;; Hardware stack levels required when called: 1
  1437 ;; This function calls:
  1438 ;;		_I2C_Hold
  1439 ;; This function is called by:
  1440 ;;		_SSD1306_WriteCommand
  1441 ;;		_SSD1306_Init
  1442 ;;		_SSD1306_String
  1443 ;;		_SSD1306_ClearScreen
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           	psect	text6
  1448   00095E                     __ptext6:
  1449                           	callstack 0
  1450   00095E                     _I2C_Stop:
  1451                           	callstack 28
  1452   00095E                     
  1453                           ;main.c: 134:  I2C_Hold();
  1454   00095E  EC7F  F004         	call	_I2C_Hold	;wreg free
  1455   000962                     
  1456                           ;main.c: 135:  PEN = 1;
  1457   000962  84C5               	bsf	4037,2,c	;volatile
  1458   000964                     l62:
  1459   000964  B4C5               	btfsc	4037,2,c	;volatile
  1460   000966  EFB7  F004         	goto	u41
  1461   00096A  EFB9  F004         	goto	u40
  1462   00096E                     u41:
  1463   00096E  EFB2  F004         	goto	l62
  1464   000972                     u40:
  1465   000972  0012               	return		;funcret
  1466   000974                     __end_of_I2C_Stop:
  1467                           	callstack 0
  1468                           
  1469 ;; *************** function _I2C_Start *****************
  1470 ;; Defined at:
  1471 ;;		line 127 in file "main.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;		None
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;		None
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, status,2, status,0, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1485 ;;      Params:         0       0       0       0       0       0       0
  1486 ;;      Locals:         0       0       0       0       0       0       0
  1487 ;;      Temps:          0       0       0       0       0       0       0
  1488 ;;      Totals:         0       0       0       0       0       0       0
  1489 ;;Total ram usage:        0 bytes
  1490 ;; Hardware stack levels used: 1
  1491 ;; Hardware stack levels required when called: 1
  1492 ;; This function calls:
  1493 ;;		_I2C_Hold
  1494 ;; This function is called by:
  1495 ;;		_SSD1306_WriteCommand
  1496 ;;		_SSD1306_Init
  1497 ;;		_SSD1306_String
  1498 ;;		_SSD1306_ClearScreen
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           	psect	text7
  1503   000974                     __ptext7:
  1504                           	callstack 0
  1505   000974                     _I2C_Start:
  1506                           	callstack 28
  1507   000974                     
  1508                           ;main.c: 128:  I2C_Hold();
  1509   000974  EC7F  F004         	call	_I2C_Hold	;wreg free
  1510   000978                     
  1511                           ;main.c: 129:  SEN = 1;
  1512   000978  80C5               	bsf	4037,0,c	;volatile
  1513   00097A                     l56:
  1514   00097A  B0C5               	btfsc	4037,0,c	;volatile
  1515   00097C  EFC2  F004         	goto	u31
  1516   000980  EFC4  F004         	goto	u30
  1517   000984                     u31:
  1518   000984  EFBD  F004         	goto	l56
  1519   000988                     u30:
  1520   000988  0012               	return		;funcret
  1521   00098A                     __end_of_I2C_Start:
  1522                           	callstack 0
  1523                           
  1524 ;; *************** function _I2C_Hold *****************
  1525 ;; Defined at:
  1526 ;;		line 123 in file "main.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;		None
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;		None
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      void 
  1533 ;; Registers used:
  1534 ;;		wreg, status,2, status,0
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1540 ;;      Params:         0       0       0       0       0       0       0
  1541 ;;      Locals:         0       0       0       0       0       0       0
  1542 ;;      Temps:          1       0       0       0       0       0       0
  1543 ;;      Totals:         1       0       0       0       0       0       0
  1544 ;;Total ram usage:        1 bytes
  1545 ;; Hardware stack levels used: 1
  1546 ;; This function calls:
  1547 ;;		Nothing
  1548 ;; This function is called by:
  1549 ;;		_I2C_Start
  1550 ;;		_I2C_Stop
  1551 ;;		_I2C_Write
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555                           	psect	text8
  1556   0008FE                     __ptext8:
  1557                           	callstack 0
  1558   0008FE                     _I2C_Hold:
  1559                           	callstack 28
  1560   0008FE                     l768:
  1561   0008FE  CFC5 F001          	movff	4037,??_I2C_Hold	;volatile
  1562   000902  0E1F               	movlw	31
  1563   000904  1601               	andwf	??_I2C_Hold^0,f,c
  1564   000906  A4D8               	btfss	status,2,c
  1565   000908  EF88  F004         	goto	u11
  1566   00090C  EF8A  F004         	goto	u10
  1567   000910                     u11:
  1568   000910  EF7F  F004         	goto	l768
  1569   000914                     u10:
  1570   000914  B4C7               	btfsc	199,2,c	;volatile
  1571   000916  EF8F  F004         	goto	u21
  1572   00091A  EF91  F004         	goto	u20
  1573   00091E                     u21:
  1574   00091E  EF7F  F004         	goto	l768
  1575   000922                     u20:
  1576   000922  0012               	return		;funcret
  1577   000924                     __end_of_I2C_Hold:
  1578                           	callstack 0
  1579                           
  1580 ;; *************** function _I2C_Init *****************
  1581 ;; Defined at:
  1582 ;;		line 116 in file "main.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;		None
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;		None
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  1    wreg      void 
  1589 ;; Registers used:
  1590 ;;		wreg, status,2
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1596 ;;      Params:         0       0       0       0       0       0       0
  1597 ;;      Locals:         0       0       0       0       0       0       0
  1598 ;;      Temps:          0       0       0       0       0       0       0
  1599 ;;      Totals:         0       0       0       0       0       0       0
  1600 ;;Total ram usage:        0 bytes
  1601 ;; Hardware stack levels used: 1
  1602 ;; This function calls:
  1603 ;;		Nothing
  1604 ;; This function is called by:
  1605 ;;		_main
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           	psect	text9
  1610   000998                     __ptext9:
  1611                           	callstack 0
  1612   000998                     _I2C_Init:
  1613                           	callstack 30
  1614   000998                     
  1615                           ;main.c: 117:  SSPCON1 = 0b00101000;
  1616   000998  0E28               	movlw	40
  1617   00099A  6EC6               	movwf	198,c	;volatile
  1618   00099C                     
  1619                           ;main.c: 118:  SSPCON2 = 0b00000000;
  1620   00099C  6AC5               	clrf	197,c	;volatile
  1621                           
  1622                           ;main.c: 119:  SSPADD = ((4000000 / 4) / 100000) - 1;
  1623   00099E  0E09               	movlw	9
  1624   0009A0  6EC8               	movwf	200,c	;volatile
  1625   0009A2                     
  1626                           ;main.c: 120:  SSPSTAT = 0b00000000;
  1627   0009A2  6AC7               	clrf	199,c	;volatile
  1628   0009A4  0012               	return		;funcret
  1629   0009A6                     __end_of_I2C_Init:
  1630                           	callstack 0
  1631                           
  1632                           	psect	rparam
  1633   000001                     ___rparam_used  equ	1
  1634   000000                     ___param_bank   equ	0
  1635   000000                     __Lparam        equ	__Lrparam
  1636   000000                     __Hparam        equ	__Hrparam
  1637                           
  1638                           	psect	config
  1639                           
  1640                           ; Padding undefined space
  1641   300000                     	org	3145728
  1642   300000  FF                 	db	255
  1643                           
  1644                           ;Config register CONFIG1H @ 0x300001
  1645                           ;	Oscillator Selection bits
  1646                           ;	OSC = IRCIO67, Internal oscillator block, port function on RA6 and RA7
  1647                           ;	Fail-Safe Clock Monitor Enable bit
  1648                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1649                           ;	Internal/External Oscillator Switchover bit
  1650                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1651   300001                     	org	3145729
  1652   300001  08                 	db	8
  1653                           
  1654                           ;Config register CONFIG2L @ 0x300002
  1655                           ;	Power-up Timer Enable bit
  1656                           ;	PWRT = OFF, PWRT disabled
  1657                           ;	Brown-out Reset Enable bits
  1658                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1659                           ;	Brown-out Reset Voltage bits
  1660                           ;	BORV = 3, VBOR set to 2.1V
  1661   300002                     	org	3145730
  1662   300002  19                 	db	25
  1663                           
  1664                           ;Config register CONFIG2H @ 0x300003
  1665                           ;	Watchdog Timer Enable bit
  1666                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1667                           ;	Watchdog Timer Postscale Select bits
  1668                           ;	WDTPS = 32768, 1:32768
  1669   300003                     	org	3145731
  1670   300003  1E                 	db	30
  1671                           
  1672                           ; Padding undefined space
  1673   300004                     	org	3145732
  1674   300004  FF                 	db	255
  1675                           
  1676                           ;Config register CONFIG3H @ 0x300005
  1677                           ;	PORTB A/D Enable bit
  1678                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1679                           ;	Low-Power Timer 1 Oscillator Enable bit
  1680                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1681                           ;	MCLR Pin Enable bit
  1682                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  1683   300005                     	org	3145733
  1684   300005  02                 	db	2
  1685                           
  1686                           ;Config register CONFIG4L @ 0x300006
  1687                           ;	Stack Full/Underflow Reset Enable bit
  1688                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1689                           ;	Single-Supply ICSP Enable bit
  1690                           ;	LVP = OFF, Single-Supply ICSP disabled
  1691                           ;	Boot Block Size Select bit
  1692                           ;	BBSIZ = 1024, 1K words (2K bytes) boot block
  1693                           ;	Extended Instruction Set Enable bit
  1694                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1695                           ;	Background Debugger Enable bit
  1696                           ;	DEBUG = 0x1, unprogrammed default
  1697   300006                     	org	3145734
  1698   300006  81                 	db	129
  1699                           
  1700                           ; Padding undefined space
  1701   300007                     	org	3145735
  1702   300007  FF                 	db	255
  1703                           
  1704                           ;Config register CONFIG5L @ 0x300008
  1705                           ;	Code Protection bit
  1706                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1707                           ;	Code Protection bit
  1708                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1709                           ;	Code Protection bit
  1710                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1711                           ;	Code Protection bit
  1712                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1713   300008                     	org	3145736
  1714   300008  0F                 	db	15
  1715                           
  1716                           ;Config register CONFIG5H @ 0x300009
  1717                           ;	Boot Block Code Protection bit
  1718                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1719                           ;	Data EEPROM Code Protection bit
  1720                           ;	CPD = OFF, Data EEPROM not code-protected
  1721   300009                     	org	3145737
  1722   300009  C0                 	db	192
  1723                           
  1724                           ;Config register CONFIG6L @ 0x30000A
  1725                           ;	Write Protection bit
  1726                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1727                           ;	Write Protection bit
  1728                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1729                           ;	Write Protection bit
  1730                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1731                           ;	Write Protection bit
  1732                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1733   30000A                     	org	3145738
  1734   30000A  0F                 	db	15
  1735                           
  1736                           ;Config register CONFIG6H @ 0x30000B
  1737                           ;	Configuration Register Write Protection bit
  1738                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1739                           ;	Boot Block Write Protection bit
  1740                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1741                           ;	Data EEPROM Write Protection bit
  1742                           ;	WRTD = OFF, Data EEPROM not write-protected
  1743   30000B                     	org	3145739
  1744   30000B  E0                 	db	224
  1745                           
  1746                           ;Config register CONFIG7L @ 0x30000C
  1747                           ;	Table Read Protection bit
  1748                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1749                           ;	Table Read Protection bit
  1750                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1751                           ;	Table Read Protection bit
  1752                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1753                           ;	Table Read Protection bit
  1754                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1755   30000C                     	org	3145740
  1756   30000C  0F                 	db	15
  1757                           
  1758                           ;Config register CONFIG7H @ 0x30000D
  1759                           ;	Boot Block Table Read Protection bit
  1760                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1761   30000D                     	org	3145741
  1762   30000D  40                 	db	64
  1763                           tosu	equ	0xFFF
  1764                           tosh	equ	0xFFE
  1765                           tosl	equ	0xFFD
  1766                           stkptr	equ	0xFFC
  1767                           pclatu	equ	0xFFB
  1768                           pclath	equ	0xFFA
  1769                           pcl	equ	0xFF9
  1770                           tblptru	equ	0xFF8
  1771                           tblptrh	equ	0xFF7
  1772                           tblptrl	equ	0xFF6
  1773                           tablat	equ	0xFF5
  1774                           prodh	equ	0xFF4
  1775                           prodl	equ	0xFF3
  1776                           indf0	equ	0xFEF
  1777                           postinc0	equ	0xFEE
  1778                           postdec0	equ	0xFED
  1779                           preinc0	equ	0xFEC
  1780                           plusw0	equ	0xFEB
  1781                           fsr0h	equ	0xFEA
  1782                           fsr0l	equ	0xFE9
  1783                           wreg	equ	0xFE8
  1784                           indf1	equ	0xFE7
  1785                           postinc1	equ	0xFE6
  1786                           postdec1	equ	0xFE5
  1787                           preinc1	equ	0xFE4
  1788                           plusw1	equ	0xFE3
  1789                           fsr1h	equ	0xFE2
  1790                           fsr1l	equ	0xFE1
  1791                           bsr	equ	0xFE0
  1792                           indf2	equ	0xFDF
  1793                           postinc2	equ	0xFDE
  1794                           postdec2	equ	0xFDD
  1795                           preinc2	equ	0xFDC
  1796                           plusw2	equ	0xFDB
  1797                           fsr2h	equ	0xFDA
  1798                           fsr2l	equ	0xFD9
  1799                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    66
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     12      12
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    SSD1306_String@data	PTR const unsigned char  size(1) Largest target is 66
		 -> TestStr(CODE[66]), 


Critical Paths under _main in COMRAM

    _main->_SSD1306_String
    _SSD1306_String->_I2C_Write
    _SSD1306_Init->_SSD1306_WriteCommand
    _SSD1306_WriteCommand->_I2C_Write
    _SSD1306_ClearScreen->_I2C_Write
    _I2C_Write->_I2C_Hold
    _I2C_Stop->_I2C_Hold
    _I2C_Start->_I2C_Hold

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     227
                                             10 COMRAM     2     2      0
                           _I2C_Init
                _SSD1306_ClearScreen
                       _SSD1306_Init
                     _SSD1306_String
 ---------------------------------------------------------------------------------
 (1) _SSD1306_String                                       8     5      3     107
                                              2 COMRAM     8     5      3
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _SSD1306_Init                                         0     0      0      45
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
               _SSD1306_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _SSD1306_WriteCommand                                 1     1      0      30
                                              2 COMRAM     1     1      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _SSD1306_ClearScreen                                  4     4      0      75
                                              2 COMRAM     4     4      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      15
                                              1 COMRAM     1     1      0
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (3) _I2C_Hold                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _SSD1306_ClearScreen
     _I2C_Start
       _I2C_Hold
     _I2C_Stop
       _I2C_Hold
     _I2C_Write
       _I2C_Hold
   _SSD1306_Init
     _I2C_Start
     _I2C_Stop
     _I2C_Write
     _SSD1306_WriteCommand
       _I2C_Start
       _I2C_Stop
       _I2C_Write
   _SSD1306_String
     _I2C_Start
     _I2C_Stop
     _I2C_Write

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMRAM           95      0       0      0.0%
BITBANK0           160      0       0      0.0%
BITBANK1           256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BITBIGSFRlll       652      0       0      0.0%
BITBIGSFRh          58      0       0      0.0%
BITBIGSFRlh         38      0       0      0.0%
BITBIGSFRllh        17      0       0      0.0%
COMRAM              95     12      12     12.6%
BANK0              160      0       0      0.0%
BANK1              256      0       0      0.0%
BANK2              256      0       0      0.0%
BANK3              256      0       0      0.0%
BANK4              256      0       0      0.0%
BANK5              256      0       0      0.0%
BIGRAM            1535      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      12      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sat Aug 30 02:22:52 2025

                          l53 0922                            l62 0964                            l70 095A  
                          l47 09A4                            l71 095C                            l56 097A  
                          l65 0972                            l90 085C                            l74 0940  
                          l59 0988                            l83 08FC                            l68 094C  
                          l77 07B8                            u10 0914                            u11 0910  
                          u20 0922                            u21 091E                            u30 0988  
                          u31 0984                            u40 0972                            u41 096E  
                          u50 095A                            u51 0956                            u60 083C  
                          u61 0838                            u70 085C                            u71 0858  
                          u90 08FC                            u91 08F8                           l810 081C  
                         l802 07FA                           l812 0820                           l900 06C0  
                         l814 083C                           l902 06D6                           l816 0840  
                         l808 0802                           l904 06D8                           l770 0914  
                         l906 06EE                           l772 0974                           l780 0944  
                         l908 06F0                           l790 09A2                           l766 08FE  
                         l774 0978                           l782 0948                           l870 08B2  
                         l768 08FE                           l776 095E                           l784 0926  
                         l792 070E                           l872 08C4                           l864 085E  
                         l880 0648                           l786 0998                           l778 0962  
                         l794 07BA                           l874 08C8                           l866 0896  
                         l890 067C                           l882 064A                           l788 099C  
                         l796 07F2                           l868 08A2                           l876 08CC  
                         l892 0680                           l884 064C                           l894 0696  
                         l886 0662                           l878 0644                           l896 069A  
                         l888 0666                           l898 06B0                           u107 0656  
                         u117 0670                           u127 068A                           u137 06A4  
                         u147 06CA                           u157 06E2                           u167 06FA  
                         _PEN 7E2A                           _SEN 7E28  __end_of_SSD1306_WriteCommand 0942  
                         wreg 0FE8              ??_SSD1306_String 0006                          _main 0644  
            __end_of_I2C_Hold 0924              __end_of_I2C_Init 09A6              __end_of_I2C_Stop 0974  
                        prodh 0FF4                          prodl 0FF3                          start 7FFC  
                ___param_bank 0000               __end_of_TestStr 0643                         ?_main 0001  
                       _TRISC 0F94                         _TRISD 0F95                         _SSPIF 7CF3  
           __end_of_I2C_Start 098A             __end_of_I2C_Write 095E                         tablat 0FF5  
                       status 0FD8               __initialization 098A                  __end_of_main 070E  
                      ??_main 000B                 __activetblptr 0001           _SSD1306_ClearScreen 07BA  
                      _OSCCON 0FD3                        _SSPADD 0FC8                        _SSPBUF 0FC9  
        _SSD1306_WriteCommand 0924                 ?_SSD1306_Init 0001          ?_SSD1306_ClearScreen 0001  
                      isa$std 0001            SSD1306_String@data 0005                     ?_I2C_Hold 0001  
                   ?_I2C_Init 0001                     ?_I2C_Stop 0001                  __mediumconst 0600  
                      tblptrh 0FF7                        tblptrl 0FF6                        tblptru 0FF8  
        SSD1306_ClearScreen@i 0003          SSD1306_ClearScreen@j 0005                    __accesstop 0060  
     __end_of__initialization 098A                 ___rparam_used 0001         ?_SSD1306_WriteCommand 0001  
              ??_SSD1306_Init 0004         ??_SSD1306_ClearScreen 0003                __pcstackCOMRAM 0001  
                  ??_I2C_Hold 0001                    ??_I2C_Init 0001                    ??_I2C_Stop 0002  
                     _SSPCON1 0FC6                       _SSPCON2 0FC5                       _SSPSTAT 0FC7  
      ??_SSD1306_WriteCommand 0003                     _I2C_Start 0974                     _I2C_Write 0942  
                     __Hparam 0000                       __Lparam 0000                       _TestStr 0601  
                __psmallconst 0600                       __pcinit 098A                       __ramtop 0600  
                     __ptext0 0644                       __ptext1 085E                       __ptext2 070E  
                     __ptext3 0924                       __ptext4 07BA                       __ptext5 0942  
                     __ptext6 095E                       __ptext7 0974                       __ptext8 08FE  
                     __ptext9 0998          __end_of_SSD1306_Init 07BA          end_of_initialization 098A  
                  ?_I2C_Start 0001                    ?_I2C_Write 0001           start_initialization 098A  
 __end_of_SSD1306_ClearScreen 085E                   ??_I2C_Start 0002                   ??_I2C_Write 0002  
                _SSD1306_Init 070E                _SSD1306_String 085E       SSD1306_WriteCommand@cmd 0003  
                 __smallconst 0600                      _I2C_Hold 08FE                      _I2C_Init 0998  
                    _I2C_Stop 095E                      _LATDbits 0F8C        __end_of_SSD1306_String 08FE  
       SSD1306_String@numChar 0003               SSD1306_String@i 0009                      __Hrparam 0000  
                    __Lrparam 0000               ?_SSD1306_String 0003                  __Lsmallconst 0600  
               I2C_Write@data 0002                      isa$xinst 0000  
